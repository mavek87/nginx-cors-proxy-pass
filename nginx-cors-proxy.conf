upstream backend {
  server $BACKEND;
}

server {
  listen 80 default_server;
  listen [::]:80 default_server;

  underscores_in_headers on;

  server_name cors;
  
  location / {
    proxy_pass http://backend;
    proxy_pass_request_headers on;
    proxy_redirect http://$BACKEND http://$http_host;
    proxy_read_timeout 300;

    client_max_body_size 500M;

    proxy_set_header Proxy '';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Access-Control-Allow-Credentials;

    set $CORS_ALLOW_CREDS true;
    set $CORS_ALLOW_ORIGIN $http_origin;
    set $CORS_ALLOW_METHODS 'GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS';
    set $CORS_ALLOW_HEADERS 'Authorization, Accept, Accept-Encoding, Accept-Language, Accept-Time, Authentication-Token, Cache-Control, Content-Language, Content-Type, Cookie, DNT, If-Modified-Since, Range, Keep-Alive, Origin, User-Agent, X-Requested-With';
    set $CORS_EXPOSE_HEADERS 'Content-Disposition, Content-Length, Content-Range, Set-Cookie';
    # FYI: Always exposed headers: Cache-Control, Content-Language, Content-Type, Expires, Last-Modified, Pragma
    set $CORS_PREFLIGHT_CACHE_AGE 600;
    set $X_FRAME_OPTIONS '';
    # set $X_FRAME_OPTIONS "ALLOW FROM $http_origin";

    # NOTE: do not refactor these if blocks => https://www.nginx.com/resources/wiki/start/topics/depth/ifisevil/
    if ($request_method = 'OPTIONS') {
      add_header Access-Control-Allow-Origin $CORS_ALLOW_ORIGIN always;
      add_header Access-Control-Allow-Methods $CORS_ALLOW_METHODS always;
      add_header Access-Control-Allow-Headers $CORS_ALLOW_HEADERS always;
      add_header Access-Control-Allow-Credentials $CORS_ALLOW_CREDS always;

      add_header Access-Control-Max-Age $CORS_PREFLIGHT_CACHE_AGE;
      add_header Content-Type 'text/plain; charset=utf-8';
      add_header Content-Length 0;
      return 204;
    }
    if ($request_method != 'OPTIONS') {
      add_header Access-Control-Allow-Origin $CORS_ALLOW_ORIGIN always;
      add_header Access-Control-Allow-Methods $CORS_ALLOW_METHODS always;
      add_header Access-Control-Allow-Headers $CORS_ALLOW_HEADERS always;
      add_header Access-Control-Allow-Credentials $CORS_ALLOW_CREDS always;

      add_header Access-Control-Expose-Headers $CORS_EXPOSE_HEADERS;
      add_header X-Frame-Options $X_FRAME_OPTIONS;
    }
  }
}